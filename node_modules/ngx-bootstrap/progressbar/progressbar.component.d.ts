import { ProgressbarConfig } from './progressbar.config';
import { BarComponent } from './bar.component';
import * as ɵngcc0 from '@angular/core';
export declare class ProgressbarComponent {
    /** if `true` changing value of progress bar will be animated */
    animate: boolean;
    /** If `true`, striped classes are applied */
    striped: boolean;
    /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */
    type: string;
    /** current value of progress bar. Could be a number or array of objects
     * like {"value":15,"type":"info","label":"15 %"}
     */
    value: number | any[];
    isStacked: boolean;
    _striped: boolean;
    _animate: boolean;
    _value: number | any[];
    readonly isBs3: boolean;
    /** maximum total value of progress element */
    max: number;
    addClass: boolean;
    bars: BarComponent[];
    protected _max: number;
    constructor(config: ProgressbarConfig);
    addBar(bar: BarComponent): void;
    removeBar(bar: BarComponent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProgressbarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ProgressbarComponent, "progressbar", never, { "animate": "animate"; "striped": "striped"; "value": "value"; "max": "max"; "type": "type"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NiYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInByb2dyZXNzYmFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2dyZXNzYmFyQ29uZmlnIH0gZnJvbSAnLi9wcm9ncmVzc2Jhci5jb25maWcnO1xuaW1wb3J0IHsgQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9iYXIuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFByb2dyZXNzYmFyQ29tcG9uZW50IHtcbiAgICAvKiogaWYgYHRydWVgIGNoYW5naW5nIHZhbHVlIG9mIHByb2dyZXNzIGJhciB3aWxsIGJlIGFuaW1hdGVkICovXG4gICAgYW5pbWF0ZTogYm9vbGVhbjtcbiAgICAvKiogSWYgYHRydWVgLCBzdHJpcGVkIGNsYXNzZXMgYXJlIGFwcGxpZWQgKi9cbiAgICBzdHJpcGVkOiBib29sZWFuO1xuICAgIC8qKiBwcm92aWRlIG9uZSBvZiB0aGUgZm91ciBzdXBwb3J0ZWQgY29udGV4dHVhbCBjbGFzc2VzOiBgc3VjY2Vzc2AsIGBpbmZvYCwgYHdhcm5pbmdgLCBgZGFuZ2VyYCAqL1xuICAgIHR5cGU6IHN0cmluZztcbiAgICAvKiogY3VycmVudCB2YWx1ZSBvZiBwcm9ncmVzcyBiYXIuIENvdWxkIGJlIGEgbnVtYmVyIG9yIGFycmF5IG9mIG9iamVjdHNcbiAgICAgKiBsaWtlIHtcInZhbHVlXCI6MTUsXCJ0eXBlXCI6XCJpbmZvXCIsXCJsYWJlbFwiOlwiMTUgJVwifVxuICAgICAqL1xuICAgIHZhbHVlOiBudW1iZXIgfCBhbnlbXTtcbiAgICBpc1N0YWNrZWQ6IGJvb2xlYW47XG4gICAgX3N0cmlwZWQ6IGJvb2xlYW47XG4gICAgX2FuaW1hdGU6IGJvb2xlYW47XG4gICAgX3ZhbHVlOiBudW1iZXIgfCBhbnlbXTtcbiAgICByZWFkb25seSBpc0JzMzogYm9vbGVhbjtcbiAgICAvKiogbWF4aW11bSB0b3RhbCB2YWx1ZSBvZiBwcm9ncmVzcyBlbGVtZW50ICovXG4gICAgbWF4OiBudW1iZXI7XG4gICAgYWRkQ2xhc3M6IGJvb2xlYW47XG4gICAgYmFyczogQmFyQ29tcG9uZW50W107XG4gICAgcHJvdGVjdGVkIF9tYXg6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IFByb2dyZXNzYmFyQ29uZmlnKTtcbiAgICBhZGRCYXIoYmFyOiBCYXJDb21wb25lbnQpOiB2b2lkO1xuICAgIHJlbW92ZUJhcihiYXI6IEJhckNvbXBvbmVudCk6IHZvaWQ7XG59XG4iXX0=