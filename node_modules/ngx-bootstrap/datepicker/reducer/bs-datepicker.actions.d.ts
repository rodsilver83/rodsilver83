import { TimeUnit } from 'ngx-bootstrap/chronos';
import { Action } from 'ngx-bootstrap/mini-ngrx';
import { BsDatepickerViewMode, BsViewNavigationEvent, CellHoverEvent, DatepickerRenderOptions } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerActions {
    static readonly CALCULATE: string;
    static readonly FORMAT: string;
    static readonly FLAG: string;
    static readonly SELECT: string;
    static readonly NAVIGATE_OFFSET: string;
    static readonly NAVIGATE_TO: string;
    static readonly SET_OPTIONS: string;
    static readonly HOVER: string;
    static readonly CHANGE_VIEWMODE: string;
    static readonly SET_MIN_DATE: string;
    static readonly SET_MAX_DATE: string;
    static readonly SET_DAYSDISABLED: string;
    static readonly SET_DATESDISABLED: string;
    static readonly SET_IS_DISABLED: string;
    static readonly SET_LOCALE: string;
    static readonly SELECT_RANGE: string;
    calculate(): Action;
    format(): Action;
    flag(): Action;
    select(date: Date): Action;
    changeViewMode(event: BsDatepickerViewMode): Action;
    navigateTo(event: BsViewNavigationEvent): Action;
    navigateStep(step: TimeUnit): Action;
    setOptions(options: DatepickerRenderOptions): Action;
    selectRange(value: Date[]): Action;
    hoverDay(event: CellHoverEvent): Action;
    minDate(date: Date): Action;
    maxDate(date: Date): Action;
    daysDisabled(days: number[]): Action;
    datesDisabled(dates: Date[]): Action;
    isDisabled(value: boolean): Action;
    setLocale(locale: string): Action;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerActions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerActions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5hY3Rpb25zLmQudHMiLCJzb3VyY2VzIjpbImJzLWRhdGVwaWNrZXIuYWN0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGltZVVuaXQgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Nocm9ub3MnO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9taW5pLW5ncngnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyVmlld01vZGUsIEJzVmlld05hdmlnYXRpb25FdmVudCwgQ2VsbEhvdmVyRXZlbnQsIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zIH0gZnJvbSAnLi4vbW9kZWxzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJzRGF0ZXBpY2tlckFjdGlvbnMge1xuICAgIHN0YXRpYyByZWFkb25seSBDQUxDVUxBVEU6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgRk9STUFUOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IEZMQUc6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VMRUNUOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IE5BVklHQVRFX09GRlNFVDogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBOQVZJR0FURV9UTzogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfT1BUSU9OUzogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBIT1ZFUjogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBDSEFOR0VfVklFV01PREU6IHN0cmluZztcbiAgICBzdGF0aWMgcmVhZG9ubHkgU0VUX01JTl9EQVRFOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9NQVhfREFURTogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfREFZU0RJU0FCTEVEOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9EQVRFU0RJU0FCTEVEOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFVF9JU19ESVNBQkxFRDogc3RyaW5nO1xuICAgIHN0YXRpYyByZWFkb25seSBTRVRfTE9DQUxFOiBzdHJpbmc7XG4gICAgc3RhdGljIHJlYWRvbmx5IFNFTEVDVF9SQU5HRTogc3RyaW5nO1xuICAgIGNhbGN1bGF0ZSgpOiBBY3Rpb247XG4gICAgZm9ybWF0KCk6IEFjdGlvbjtcbiAgICBmbGFnKCk6IEFjdGlvbjtcbiAgICBzZWxlY3QoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBjaGFuZ2VWaWV3TW9kZShldmVudDogQnNEYXRlcGlja2VyVmlld01vZGUpOiBBY3Rpb247XG4gICAgbmF2aWdhdGVUbyhldmVudDogQnNWaWV3TmF2aWdhdGlvbkV2ZW50KTogQWN0aW9uO1xuICAgIG5hdmlnYXRlU3RlcChzdGVwOiBUaW1lVW5pdCk6IEFjdGlvbjtcbiAgICBzZXRPcHRpb25zKG9wdGlvbnM6IERhdGVwaWNrZXJSZW5kZXJPcHRpb25zKTogQWN0aW9uO1xuICAgIHNlbGVjdFJhbmdlKHZhbHVlOiBEYXRlW10pOiBBY3Rpb247XG4gICAgaG92ZXJEYXkoZXZlbnQ6IENlbGxIb3ZlckV2ZW50KTogQWN0aW9uO1xuICAgIG1pbkRhdGUoZGF0ZTogRGF0ZSk6IEFjdGlvbjtcbiAgICBtYXhEYXRlKGRhdGU6IERhdGUpOiBBY3Rpb247XG4gICAgZGF5c0Rpc2FibGVkKGRheXM6IG51bWJlcltdKTogQWN0aW9uO1xuICAgIGRhdGVzRGlzYWJsZWQoZGF0ZXM6IERhdGVbXSk6IEFjdGlvbjtcbiAgICBpc0Rpc2FibGVkKHZhbHVlOiBib29sZWFuKTogQWN0aW9uO1xuICAgIHNldExvY2FsZShsb2NhbGU6IHN0cmluZyk6IEFjdGlvbjtcbn1cbiJdfQ==